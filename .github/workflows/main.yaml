name: Docker

on:
  push:
  pull_request:
    branches: [ main ]

env:
  DOCKER_HUB: docker.io
  DOCKER_USER: ${{ secrets.DOCKER_IO_USER }}
  IS_RELEASE: ${{ startsWith( github.ref, 'refs/tags/release-' ) }}

jobs:
   build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[test,build]

      - name: Lint with flake8
        run: |
          # Only stop the build if there are Python syntax errors or undefined names
          flake8 . --select=E9,F63,F7,F82
          flake8 . --exit-zero
 
      - name: Test with pytest
        run: |
          pytest

      - name: Initialize Environment
        run: |
          set -eux
          REPO_NAME="$( basename "${GITHUB_REPOSITORY}" )"
          REF_NAME="$( basename "${GITHUB_REF}" )"
          echo "DOCKER_IMAGE=${REPO_NAME}:${REF_NAME}" >> "${GITHUB_ENV}"

      - name: Build Docker Image
        run: |
          set -eux
          docker build \
            --file docker/Dockerfile \
            --tag "${DOCKER_IMAGE}" \
            .

      - name: Publish Docker Image
        run: |
          function publish() {
            set -eux
            PUB_IMAGE="${DOCKER_HUB}/${DOCKER_USER}/${DOCKER_IMAGE}"
            docker login "${DOCKER_HUB}" -u "${DOCKER_USER}" --password-stdin
            docker image tag "${DOCKER_IMAGE}" "${PUB_IMAGE}"
            docker image push "${PUB_IMAGE}"
          }
          echo "${{ secrets.DOCKER_IO_PASS }}" | publish
